<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yayiabc.http.mvc.dao.SaleIncomeListDao">
	<resultMap type="SaleIncomeVo" id="saleIncomeVoRM">
		<id column="sale_id" property="saleId"/>
		<result column="sale_name" property="saleName"/>
		<result column="sale_phone" property="salePhone"/>
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="user_phone" property="userPhone"/>
		<result column="get_state" property="getState"/>
		<result column="get_updated" property="getUpdated"/>
		<result column="get_money" property="getMoney"/>
		<result column="sign_late_seven" property="signLateSeven"/>
		<collection property="orderVoList" ofType="OrderVo">
			<id column="order_id" property="orderId"/>
			<result column="order_state" property="orderState"/>
			<result column="sign_updated" property="signUpdated"/>
			<result column="item_name" property="itemName"/>
			<result column="itm_SKU" property="itemSKU"/>
			<result column="price" property="price"/>
			<result column="num" property="num"/>
			<result column="total_fee" property="totalFee"/>
			<result column="refund_money" property="refundMoney"/>
			<result column="commission" property="commission"/>
			<result column="order_created" property="orderCreated"/>
		</collection>
	</resultMap>
	
	<resultMap type="SaleIncomeVo" id="achievementRM">
		<id column="sale_id" property="saleId"/>
		<result column="saleName" property="saleName"/>
		<result column="salePhone" property="salePhone"/>
		<result column="getMoney" property="getMoney"/>
		<result column="beYearMonth" property="beYearMonth"/>
		<result column="getState" property="getState"/>
		<result column="settlementTime" property="settlementTime"/>
		<result column="allMoney" property="allMoney"/>
		<result column="allActual" property="allActual"/>
		<result column="moneyRefund" property="moneyRefund"/>
	</resultMap>
	
	<select id="queryDone" resultMap="achievementRM">
		SELECT 
		s.sale_id,
		s.true_name AS saleName,
		s.phone AS salePhone,
		IF(b.balance_in IS NOT NULL,b.balance_in,0) AS getMoney,
		DATE_FORMAT(DATE_SUB(b.created,INTERVAL 1 MONTH),'%Y-%m') AS beYearMonth,
		"已结算" AS getState,
		DATE_FORMAT(b.created, '%Y-%c-%e %T') AS settlementTime,
		IF(ROUND(SUM(b.haocai_refund),2) IS NOT NULL,ROUND(SUM(b.haocai_refund),2),0)+IF(ROUND(SUM(b.gongju_refund),2) IS NOT NULL,ROUND(SUM(b.gongju_refund),2),0) AS moneyRefund,
		IF(ROUND(SUM(b.haocai_money),2) IS NOT NULL,ROUND(SUM(b.haocai_money),2),0)+IF(ROUND(SUM(b.gongju_money),2) IS NOT NULL,ROUND(SUM(b.gongju_money),2),0) AS allMoney,
		(IF(ROUND(SUM(b.haocai_money),2) IS NOT NULL,ROUND(SUM(b.haocai_money),2),0)+IF(ROUND(SUM(b.gongju_money),2) IS NOT NULL,ROUND(SUM(b.gongju_money),2),0))-
		(IF(ROUND(SUM(b.haocai_refund),2) IS NOT NULL,ROUND(SUM(b.haocai_refund),2),0)+IF(ROUND(SUM(b.gongju_refund),2) IS NOT NULL,ROUND(SUM(b.gongju_refund),2),0)) AS allActual		 
		FROM balance b
		LEFT JOIN sale_info s ON s.sale_id=b.sale_id
		WHERE
		b.haocai_money IS NOT NULL AND b.gongju_money IS NOT NULL
		<if test="saleName !=null and saleName !=''">
			AND s.true_name LIKE '%${saleName}%' 
		</if>
		<if test="salePhone !=null and salePhone !=''">
			AND s.phone LIKE '%${salePhone}%'
		</if>
		<if test="beYearMonth !=null and beYearMonth !=''">
			AND DATE_FORMAT(DATE_SUB(b.created,INTERVAL 1 MONTH),'%Y-%m') = #{beYearMonth}
		</if>
		<if test="startDate !=null and startDate !=''">
			AND DATE_FORMAT(b.created,'%Y-%m-%d') <![CDATA[  >=  ]]>#{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
			AND DATE_FORMAT(b.created,'%Y-%m-%d') <![CDATA[  <=  ]]>#{endDate}
		</if>
		GROUP BY b.balance_id
		ORDER BY beYearMonth DESC,getMoney DESC
		LIMIT ${page.currentNumber},${page.numberPerPage}
	</select>
	
	<select id="getCountDone" resultType="int">
	SELECT count(0) FROM (
		SELECT 
		count(0)
		FROM balance b
		LEFT JOIN sale_info s ON s.sale_id=b.sale_id
		WHERE
		b.haocai_money IS NOT NULL AND b.gongju_money IS NOT NULL
		<if test="saleName !=null and saleName !=''">
			AND s.true_name LIKE '%${saleName}%' 
		</if>
		<if test="salePhone !=null and salePhone !=''">
			AND s.phone LIKE '%${salePhone}%'
		</if>
		<if test="beYearMonth !=null and beYearMonth !=''">
			AND DATE_FORMAT(DATE_SUB(b.created,INTERVAL 1 MONTH),'%Y-%m') = #{beYearMonth}
		</if>
		<if test="startDate !=null and startDate !=''">
			AND DATE_FORMAT(b.created,'%Y-%m-%d') <![CDATA[  >=  ]]>#{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
			AND DATE_FORMAT(b.created,'%Y-%m-%d') <![CDATA[  <=  ]]>#{endDate}
		</if>
	GROUP BY b.balance_id
	) AS a
	</select>
	
	<select id="queryNot" resultMap="achievementRM">
		SELECT
		s.sale_id,
		s.true_name AS saleName,
		s.phone AS salePhone,
		"0" AS getMoney,
		DATE_FORMAT(si.created,'%Y-%m') AS beYearMonth,
		"待结算" AS getState,
		IF(ROUND(SUM(si.order_money_haocai),2) IS NOT NULL,ROUND(SUM(si.order_money_haocai),2),0)+IF(ROUND(SUM(si.order_money_gongju),2) IS NOT NULL,ROUND(SUM(si.order_money_gongju),2),0) AS allMoney,	
		IF(ROUND(SUM(si.refund_money_haocai),2) IS NOT NULL,ROUND(SUM(si.refund_money_haocai),2),0)+IF(ROUND(SUM(si.refund_money_gongju),2) IS NOT NULL,ROUND(SUM(si.refund_money_gongju),2),0) AS moneyRefund,
		(IF(ROUND(SUM(si.order_money_haocai),2) IS NOT NULL,ROUND(SUM(si.order_money_haocai),2),0)+IF(ROUND(SUM(si.order_money_gongju),2) IS NOT NULL,ROUND(SUM(si.order_money_gongju),2),0))-
		(IF(ROUND(SUM(si.refund_money_haocai),2) IS NOT NULL,ROUND(SUM(si.refund_money_haocai),2),0)+IF(ROUND(SUM(si.refund_money_gongju),2) IS NOT NULL,ROUND(SUM(si.refund_money_gongju),2),0)) AS allActual
		FROM sale_income si
		LEFT JOIN sale_info s ON si.sale_id=s.sale_id
		WHERE 
		DATE_FORMAT(si.created,'%Y-%m-%d')  BETWEEN #{startDate} AND #{endDate} 
		<if test="saleName !=null and saleName !=''">
			AND s.true_name LIKE '%${saleName}%'	
		</if>
		<if test="salePhone !=null and salePhone !=''">
			AND s.phone LIKE '%${salePhone}%'
		</if>
		GROUP BY si.sale_id
		ORDER BY allActual DESC
		LIMIT ${page.currentNumber},${page.numberPerPage} 
	</select>
	
	<select id="getCountNot" resultType="int">
		SELECT count(0) FROM (
			SELECT
			count(0)
			FROM sale_income si
			LEFT JOIN sale_info s ON si.sale_id=s.sale_id
			WHERE 
			DATE_FORMAT(si.created,'%m-%d')  BETWEEN #{startDate} AND #{endDate} 
			<if test="saleName !=null and saleName !=''">
				AND s.true_name LIKE '%${saleName}%'	
			</if>
			<if test="salePhone !=null and salePhone !=''">
				AND s.phone LIKE '%${salePhone}%'
			</if>
			GROUP BY si.sale_id
		) AS a
	</select>
	
	<resultMap type="SaleIncomeVo" id="saleIncomeRM">
		<id column="sale_id" property="saleId"/>
		<result column="saleName" property="saleName"/>
		<result column="salePhone" property="salePhone"/>
		<result column="beYearMonth" property="beYearMonth"/>
		<result column="haocaiGetMoney" property="haocaiGetMoney"/>
			<result column="gongjuGetMoney" property="gongjuGetMoney"/>
		<association property="saleDataStatistics" javaType="com.yayiabc.http.mvc.pojo.model.SaleDataStatistics">
			<result column="haocai_money" property="haocaiMoney"/>
			<result column="haocai_refund" property="haocaiRefund"/>
			<result column="haocaiActual" property="haocaiActual"/>
			<result column="gongju_money" property="gongjuMoney"/>
			<result column="gongju_refund" property="gongjuRefund"/>
			<result column="gongjuActual" property="gongjuActual"/>
		</association>
	</resultMap>
	
	<select id="detailDone" resultMap="saleIncomeRM">
		SELECT
		s.sale_id, 
		s.true_name AS saleName,
		s.phone AS salePhone,
		DATE_FORMAT(DATE_SUB(b.created,INTERVAL 1 MONTH),'%Y-%m') AS beYearMonth,
		b.haocai_money,
		b.haocai_refund,
		IF(ROUND(b.haocai_money,2) IS NOT NULL,ROUND(b.haocai_money,2),0)-IF(ROUND(b.haocai_refund,2) IS NOT NULL,ROUND(b.haocai_refund,2),0) AS haocaiActual,
		b.gongju_money,
		b.gongju_refund,
		IF(ROUND(b.gongju_money,2) IS NOT NULL,ROUND(b.gongju_money,2),0)-IF(ROUND(b.gongju_refund,2) IS NOT NULL,ROUND(b.gongju_refund,2),0) AS gongjuActual
		FROM sale_info s
		LEFT JOIN balance b ON s.sale_id=b.sale_id
		WHERE
		b.haocai_money IS NOT NULL AND b.gongju_money IS NOT NULL 
		AND s.sale_id=#{saleId} 
		AND DATE_FORMAT(DATE_SUB(b.created,INTERVAL 1 MONTH),'%Y-%m') = #{beYearMonth}
		LIMIT 1
	</select>
	
	<select id="detailNot" resultMap="saleIncomeRM">
		SELECT
		s.sale_id, 
		s.true_name AS saleName,
		s.phone AS salePhone,
		IF(ROUND(SUM(si.order_money_haocai),2) IS NOT NULL,ROUND(SUM(si.order_money_haocai),2),0) AS haocai_money,
		IF(ROUND(SUM(si.refund_money_haocai),2) IS NOT NULL,ROUND(SUM(si.refund_money_haocai),2),0) AS haocai_refund,
		(IF(ROUND(SUM(si.order_money_haocai),2) IS NOT NULL,ROUND(SUM(si.order_money_haocai),2),0))-
		(IF(ROUND(SUM(si.refund_money_haocai),2) IS NOT NULL,ROUND(SUM(si.refund_money_haocai),2),0)) AS haocaiActual,
		IF(ROUND(SUM(si.order_money_gongju),2) IS NOT NULL,ROUND(SUM(si.order_money_gongju),2),0) AS gongju_money,
		IF(ROUND(SUM(si.refund_money_gongju),2) IS NOT NULL,ROUND(SUM(si.refund_money_gongju),2),0) AS gongju_refund,
		(IF(ROUND(SUM(si.order_money_gongju),2) IS NOT NULL,ROUND(SUM(si.order_money_gongju),2),0))-
		(IF(ROUND(SUM(si.refund_money_gongju),2) IS NOT NULL,ROUND(SUM(si.refund_money_gongju),2),0)) AS gongjuActual
		FROM sale_income si
		LEFT JOIN sale_info s ON s.sale_id=si.sale_id 
		WHERE s.sale_id=#{saleId}
		AND DATE_FORMAT(si.created,'%Y-%m') = #{beYearMonth}
		LIMIT 1
	</select>
		
	<resultMap type="OrderVo" id="orderRM">
		<id column="order_id" property="orderId"/>
			<result column="userName" property="userName"/>
			<result column="userPhone" property="userPhone"/>
			<result column="orderState" property="orderState"/>
			<result column="itemSumMoney" property="itemSumMoney"/>
			<result column="order_money_haocai" property="orderMoneyHaocai"/>
			<result column="order_money_gongju" property="orderMoneyGongju"/>
			<result column="refund_money_haocai" property="refundMoneyHaocai"/>
			<result column="refund_money_gongju" property="refundMoneyGongju"/>
			<result column="actualMoney" property="actualMoney"/>
			<result column="orderCreated" property="orderCreated"/>
	</resultMap>	
		
	<select id="orderList" resultMap="orderRM">
		SELECT 
		si.order_id,
		u.true_name AS userName,
		u.phone AS userPhone,
		o.state AS orderState,
		IF(ROUND(si.order_money_haocai,2) IS NOT NULL,ROUND(si.order_money_haocai,2),0)+IF(ROUND(si.order_money_gongju,2) IS NOT NULL,ROUND(si.order_money_gongju,2),0) AS itemSumMoney,
		si.order_money_haocai,
		si.order_money_gongju,
		si.refund_money_haocai,
		si.refund_money_gongju,
		(IF(ROUND(si.order_money_haocai,2) IS NOT NULL,ROUND(si.order_money_haocai,2),0)+IF(ROUND(si.order_money_gongju,2) IS NOT NULL,ROUND(si.order_money_gongju,2),0))-
		(IF(ROUND(si.refund_money_haocai,2) IS NOT NULL,ROUND(si.refund_money_haocai,2),0)+IF(ROUND(si.refund_money_gongju,2) IS NOT NULL,ROUND(si.refund_money_gongju,2),0)) AS actualMoney,
		DATE_FORMAT(o.created, '%Y-%c-%e %T') AS orderCreated
		FROM sale_income si 
		INNER JOIN ordera o ON si.order_id=o.order_id
		INNER JOIN USER u ON o.user_id=u.user_id 
		WHERE si.sale_id=#{saleId} AND DATE_FORMAT(si.created,'%Y-%m-%d')  BETWEEN #{startDate} AND #{endDate} AND u.bind_sale_time &lt; o.created
		GROUP BY si.sale_income_id
		ORDER BY o.created DESC
		LIMIT ${page.currentNumber},${page.numberPerPage} 
	</select>	
		
	<select id="getCountOrderList" resultType="int">
		SELECT count(0) FROM (
			SELECT 
			count(0)
			FROM sale_income si 
			INNER JOIN ordera o ON si.order_id=o.order_id
			INNER JOIN USER u ON o.user_id=u.user_id 
			WHERE si.sale_id=#{saleId} AND DATE_FORMAT(si.created,'%Y-%m-%d')  BETWEEN #{startDate} AND #{endDate} AND u.bind_sale_time &lt; o.created
			GROUP BY si.sale_income_id
		) AS a
	</select>	
</mapper>