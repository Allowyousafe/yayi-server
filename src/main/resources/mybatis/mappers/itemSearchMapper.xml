<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.yayiabc.http.mvc.dao.ItemSearchDao">
	<select id="itemSearch" resultMap="itemInfoRM">
        select * from
        (SELECT * FROM
        (SELECT * FROM
        (select * from item_info where state=1) a
        INNER JOIN
        (SELECT item_id x_id,item_pica FROM item_detail) b
        ON a.item_id=b.x_id) c
        INNER JOIN
        (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) d
        ON c.item_brand_id=d.p_id)o
        inner JOIN
        (SELECT item_id prop_id,item_property_name,item_property_info,item_property_name_two,item_property_two_value,item_property_name_three,item_property_three_value,item_property_four_name,item_property_four_value,item_property_five_name,item_property_five_value,item_property_six_name,item_property_six_value,stock_num s_num,item_sku_price,item_sKU,can_use,ti_chen,item_qb,item_value_id FROM item_value) q
        ON o.item_id=q.prop_id
 WHERE item_name like '%${itemBrandName}%' or one_classify like '%${itemBrandName}%'
 or two_classify like '%${itemBrandName}%' or item_brand_name like '%${itemBrandName}%'
 order by 
    <choose>
    	<when test="rule=1">updated desc</when>
    	<when test="rule=2">sales desc</when>
    	<when test="rule=3">item_price desc</when>
    	<when test="rule=4">item_price aesc</when>
    </choose>
 LIMIT #{currentNumber},#{numberPerPage}
	</select>
	<select id="getCount" resultType="int">
		 SELECT count(0) FROM
 (SELECT * FROM
 (SELECT item_id,item_name,item_brand_id,item_price,one_classify,two_classify,three_classify FROM item_info where state=1) a
 LEFT JOIN
 (SELECT item_id x_id,item_pica FROM item_detail) b
 ON a.item_id=b.x_id) d
 LEFT JOIN
 (SELECT item_brand_id p_id,item_brand_name FROM item_brand) c
 ON d.item_brand_id=c.p_id
 WHERE item_name like '%${itemBrandName}%' or one_classify like '%${itemBrandName}%'
 or two_classify like '%${itemBrandName}%' or item_brand_name like '%${itemBrandName}%'
	</select>
    <resultMap type="ItemInfo" id="itemInfoRM" autoMapping="true">
        <id property="itemId" column="item_id"/>
        <association property="itemDetail" javaType="ItemDetail">
            <id property="itemId" column="x_id"/>
            <result property="itemPica" column="item_pica"/>
        </association>
        <association property="itemBrand" javaType="ItemBrand" autoMapping="true">
            <id property="itemBrandId" column="p_id"/>
        </association>
        <collection property="itemValueList" ofType="ItemValue" autoMapping="true">
            <id column="item_value_id" property="itemValueId"/>
            <result column="s_num" property="stockNum"/>
        </collection>
    </resultMap>

    <select id="search" resultMap="itemInfoRM">
        select * from
        (select a.*,b.item_pica,c.item_brand_name,q.* from
        (select * from item_info where state=1) a
        INNER JOIN (SELECT item_id x_id,item_pica FROM item_detail) b ON a.item_id=b.x_id
        INNER JOIN (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) c ON a.item_brand_id=c.p_id
        inner JOIN (select item_id prop_id,item_property_name,item_property_info,item_property_name_two,item_property_two_value,item_property_name_three,item_property_three_value,item_property_four_name,item_property_four_value,item_property_five_name,item_property_five_value,item_property_six_name,item_property_six_value,stock_num s_num,item_sku_price,item_sKU,can_use,ti_chen,item_qb,item_value_id FROM item_value) q ON a.item_id=q.prop_id
        <where>
            <if test="oneClassify!=null">one_classify like '%${oneClassify}%'</if>
            <if test="twoClassify!=null">and two_classify like '%${twoClassify}%'</if>
            <if test="itemBrandName!=null">and item_brand_name=#{itemBrandName}</if>
        </where>) m
        <where>
            <if test="keyWord!=null and keyWord!=''">
                item_name like '%${keyWord}%' or one_classify like '%${keyWord}%'
                or two_classify like '%${keyWord}%' or item_brand_name like '%${keyWord}%'
            </if>
        </where>
        order by
        <choose>
            <when test="rule=1">updated desc</when>
            <when test="rule=2">sales desc</when>
            <when test="rule=3">item_price desc</when>
            <when test="rule=4">item_price aesc</when>
        </choose>
        LIMIT #{currentNumber},#{numberPerPage}
    </select>
</mapper>       