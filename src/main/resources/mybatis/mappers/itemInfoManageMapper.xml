<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yayiabc.http.mvc.dao.ItemInfoManageDao">
	<select id="itemInfoListOne" resultMap="itemInfoRM">
		select a.*,b.item_brand_name from
		item_info a
		inner join
		(select item_brand_id p_id,item_brand_name from item_brand) b
		on a.item_brand_id=b.p_id
		<where>
			<if test="itemId!=null and itemId!=''">item_id like '%${itemId}%'</if>
			<if test="itemName!=null and itemName!=''">and item_name like '%${itemName}%'</if>
			<if test="state!=null">and state=#{state}</if>
			<if test="twoClassify!=null and twoClassify!=''">and item_brand_name=#{twoClassify}</if>
			<!--<if test="oneClassify!=null and oneClassify!=''">and one_classify like '%${oneClassify}%' or two_classify like '%${oneClassify}%'</if>-->
			<choose>
				<when test="isThrow==1">and one_classify like '%${oneClassify}%'</when>
				<when test="isThrow==2">and two_classify like '%${oneClassify}%'</when>
			</choose>
		</where>
		order by a.updated desc
		limit #{sales},#{itemStockNum}
	</select>

	<select id="getCountOneClassify" resultType="java.lang.Integer">
		select count(0) from item_classify where item_classify_name=#{itemClassify} and item_classify_grade=1
	</select>

	<resultMap type="ItemInfo" id="itemInfoRM" autoMapping="true">
		<id column="item_id" property="itemId" />
		<association property="itemBrand" javaType="ItemBrand"
			autoMapping="true">
			<id property="itemBrandId" column="item_brand_id" />
		</association>
	</resultMap>

	<update id="up">
		update item_info set state=1 where item_id=#{itemId}
	</update>

	<update id="down">
		update item_info set state=0 where item_id=#{itemId}
	</update>

	<delete id="deleteItemInfo">
		delete from item_info where item_id=#{itemId}
	</delete>

	<delete id="deleteItemDetail">
		delete from item_detail where item_id=#{itemId}
	</delete>

	<delete id="deleteItemValue">
		delete from item_value where item_id=#{itemId}
	</delete>

	<insert id="addItemValue">
		insert into item_value(item_id,item_sKU,item_sku_price,stock_num,can_use,item_property_name,item_property_info,item_property_name_two,item_property_two_value,item_property_name_three,item_property_three_value,item_qb,ti_chen)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.itemId},#{item.itemSKU},#{item.itemSkuPrice},#{item.stockNum},#{item.canUse},#{item.itemPropertyName},#{item.itemPropertyInfo},#{item.itemPropertyNameTwo},#{item.itemPropertyTwoValue},#{item.itemPropertyNameThree},#{item.itemPropertyThreeValue},#{item.itemQb},#{item.tiChen})
		</foreach>
	</insert>

	<insert id="addItemInfo">
		insert into item_info(item_sort,is_throw,item_id,item_name,item_brand_id,item_price,one_classify,two_classify,created,updated)
		values(#{itemSort},#{isThrow},#{itemId},#{itemName},#{itemBrand.itemBrandId},#{itemPrice},#{oneClassify},#{twoClassify},now(),now());
	</insert>

	<insert id="addItemDetail">
		insert into item_detail(item_id,item_desc,item_use,video,item_pica,item_picb,item_picc,item_picd,item_pice,store_item_id,apparatus_type,unit,produce_pompany,register_id,register_date,item_packing,item_levels,item_range,
		remark,created,updated)
		values
		(#{itemDetail.itemId},#{itemDetail.itemDesc},#{itemDetail.itemUse},#{itemDetail.video},#{itemDetail.itemPica},#{itemDetail.itemPicb},
		#{itemDetail.itemPicc},#{itemDetail.itemPicd},#{itemDetail.itemPice},#{itemDetail.storeItemId},#{itemDetail.apparatusType},#{itemDetail.unit},#{itemDetail.producePompany},
		#{itemDetail.registerId},#{itemDetail.registerDate},#{itemDetail.itemPacking},#{itemDetail.itemLevels},#{itemDetail.itemRange},#{itemDetail.remark},now(),now()
		)
	</insert>

	<update id="updateItemInfo">
		update item_info set
		is_throw=#{isThrow},item_name=#{itemName},item_brand_id=#{itemBrand.itemBrandId},item_price=#{itemPrice},one_classify=#{oneClassify},two_classify=#{twoClassify},three_classify=#{threeClassify},item_sort=#{itemSort},
		updated=now() where item_id=#{itemId}
	</update>

	<update id="updateItemDetail">
		update item_detail set
		item_desc=#{itemDesc},item_use=#{itemUse},video=#{video},item_pica=#{itemPica},item_picb=#{itemPicb},item_picc=#{itemPicc},item_picd=#{itemPicd},
		item_pice=#{itemPice},store_item_id=#{storeItemId},apparatus_type=#{apparatusType},unit=#{unit},produce_pompany=#{producePompany},register_id=#{registerId},register_date=#{registerDate},
		item_packing=#{itemPacking},item_levels=#{itemLevels},item_range=#{itemRange},updated=now(),remark=#{remark}
		where item_id=#{itemId}
	</update>

	<update id="updateItemValue">
		update item_value set
		can_use=#{canUse},stock_num=#{stockNum},item_qb=#{itemQb},ti_chen=#{tiChen},item_sku_price=#{itemSkuPrice}
		where item_sKU=#{itemSKU}
	</update>

	<select id="getMinPriceFromItemValue" resultType="java.lang.Double">
		SELECT MIN(item_sku_price) FROM item_value WHERE item_id=#{itemId}
	</select>

	<delete id="deleteItemStock">
		delete from item_stock where item_id =#{itemId}
	</delete>

	<delete id="deleteComments">
		delete from comments where item_id=#{itemId}
	</delete>

	<select id="queryItemNum" resultType="int">
		select count(0) from item_value where item_sKU=#{itemSKU}
	</select>

	<select id="getItemBrandNameByItemId" resultType="string">
		select item_brand_name from item_brand where item_brand_id=#{itemBrandId}
	</select>

	<select id="getItemClassifyGradeByName" resultType="java.lang.Integer">
		select count(0) from classify where one_classify=#{itemClassify}
	</select>

	<select id="getItemClassifyGrade" resultType="java.lang.Integer">
		select count(0) from classify_two where classify_two_name=#{itemClassify}
	</select>

	<select id="getCountOne" resultType="java.lang.Integer">
		select count(0) from
		item_info a
		inner join
		(select item_brand_id p_id,item_brand_name from item_brand) b
		on a.item_brand_id=b.p_id
		<where>
			<if test="itemId!=null and itemId!=''">item_id like '%${itemId}%'</if>
			<if test="itemName!=null and itemName!=''">and item_name like '%${itemName}%'</if>
			<if test="state!=null">and state=#{state}</if>
			<if test="twoClassify!=null and twoClassify!=''">and item_brand_name=#{twoClassify}</if>
			<!--<if test="oneClassify!=null and oneClassify!=''">and one_classify like '%${oneClassify}%' or two_classify like '%${oneClassify}%'</if>-->
			<choose>
				<when test="isThrow==1">and one_classify like '%${oneClassify}%'</when>
				<when test="isThrow==2">and two_classify like '%${oneClassify}%'</when>
			</choose>
		</where>
	</select>
	
	



</mapper>       