<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yayiabc.http.mvc.dao.UserDao">


	<insert id="register" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
		insert into user(phone,pwd,created,updated)
		values(#{phone},#{pwd},now(),now())
	</insert>

	<select id="getUserByUserId" resultMap="userMap">
		SELECT *
		FROM
		(SELECT a.*,b.phone sale_phone,b.true_name sale_name,b.sale_id sale_ids FROM
		(SELECT * FROM user WHERE user_id=#{userId}) a
		LEFT JOIN
		sale_info b
		ON a.sale_id=b.sale_id)c
		LEFT JOIN
		certification d
		ON d.user_id=c.user_id
	</select>

	<select id="getUserByPhone" resultMap="userMap">
		SELECT *
		FROM
		(SELECT a.*,b.phone sale_phone,b.true_name sale_name,b.sale_id sale_ids FROM
		(SELECT * FROM user WHERE phone=#{phone}) a
		LEFT JOIN
		sale_info b
		ON a.sale_id=b.sale_id)c
		LEFT JOIN
		certification d
		ON d.user_id=c.user_id
	</select>

	<resultMap type="User" id="userMap" autoMapping="true">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<association property="certification" javaType="Certification"
			autoMapping="true">
			<id property="certificationId" column="certification_id" />
		</association>
		<association property="saleinfo" javaType="SaleInfo"
			autoMapping="true">
			<id property="saleId" column="sale_ids" />
			<result property="phone" column="sale_phone" />
			<result property="trueName" column="sale_name" />
		</association>
	</resultMap>
	<select id="getCartNum" resultType="int">
		select count(*) from cart where user_id=#{userId}
	</select>
	<update id="updatePwd">
		update user set pwd=#{pwd} where phone=#{phone}
	</update>

	<select id="getUserId" resultType="String">
		select user_id from user where phone=#{phone};
	</select>

	<select id="getTokenByUserId" resultType="string">
		select token from user_token where user_id=#{userId}
	</select>

	<select id="getUserPhoneByToken">
		SELECT phone FROM `user` WHERE user_id =(SELECT user_id FROM user_token WHERE token=#{token});
	</select>

	<insert id="addToken">
		insert into user_token(token,user_id) values (#{token},#{userId})
	</insert>

	<update id="updateToken">
		UPDATE user_token SET token = #{token} WHERE user_id = #{userId}
	</update>

	<delete id="deleteToken">
		DELETE FROM user_token WHERE token = #{_parameter}
	</delete>

	<select id="getUserIdByToken" resultType="string">
		select user_id from user_token where token=#{token}
	</select>

    <select id="getSaleCount" resultType="java.lang.Integer">
    	select count(0) from sale_info where phone=#{phone}
    </select>

	<update id="bindSale">
		UPDATE user SET sale_id = #{1},bind_sale_time=now() WHERE user_id = #{0}
	</update>

	<update id="updateUserInfo" parameterType="User">
		update user set true_name=#{trueName},sex=#{sex},birthday=#{birthday} where phone=#{phone}
	</update>
	
	<update id="updateCertification">
		update certification set type=#{certification.type},company_name=#{certification.companyName},part=#{certification.part},
		work_address=#{certification.workAddress},doctor_pic=#{certification.doctorPic},medical_license=#{certification.medicalLicense},business_license=#{certification.businessLicense},
		 tax_registration=#{certification.taxRegistration},opening_permit=#{certification.openingPermit},radiological_permit=#{certification.radiologicalPermit},
		 id_card_positive=#{certification.idCardPositive},id_card_otherside=#{certification.idCardOtherside} where user_id=#{userId}
	</update>
	
	<select id="getUserIdByPhone" resultType="string">
		select user_id from user where phone=#{phone}
	</select>
	
	<update id="registerUserInfo">
		update user set true_name=#{trueName},sex=#{sex},birthday=#{birthday} where user_id=#{userId}
	</update>
	
	<insert id="registerUserCertification">
		insert into certification(user_id,type,company_name,part,work_address,doctor_pic,medical_license,business_license,tax_registration,opening_permit,radiological_permit,id_card_positive,id_card_otherside,state)
		values(#{userId},#{certification.type},#{certification.companyName},#{certification.part},#{certification.workAddress},
		#{certification.doctorPic},#{certification.medicalLicense},#{certification.businessLicense},#{certification.taxRegistration},#{certification.openingPermit},#{certification.radiologicalPermit},
		#{certification.idCardPositive},#{certification.idCardOtherside},1)
	</insert>

	<select id="getCountByUserId" resultType="java.lang.Integer">
		select count(0) from certification where user_id=#{userId}
	</select>

	<delete id="deleteInGrainUser">
		DELETE
		u,c,r,its,ut,qbr
		FROM `user` u
		LEFT JOIN certification c
		ON u.user_id=c.user_id
		LEFT JOIN receiver r
		ON u.user_id=r.user_id
		LEFT JOIN item_star its
		ON u.user_id=its.user_id
		LEFT JOIN user_token ut
		ON u.user_id=ut.user_id
		LEFT JOIN qb_record qbr
		ON u.user_id=qbr.user_id
		LEFT JOIN cart c
		ON u.user_id=c.user_id
		WHERE u.user_id=#{userId}
	</delete>

	<select id="getTypeByOpenid" resultType="java.util.Map">
		SELECT uid,IF(type =1,'ds',if(type = 2,'ck',NULL)) AS getType FROM wx_userlink WHERE openid=#{openid} AND type =#{type};
	</select>


</mapper>       