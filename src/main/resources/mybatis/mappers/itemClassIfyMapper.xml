<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yayiabc.http.mvc.dao.ItemClassifyDao">



   <select id="showsTreeClassify" resultMap="classify">
    SELECT a.item_classify_id AS one_id ,a.item_classify_name AS oneClassify,b.item_classify_id AS two_id,
    b.item_classify_name AS classify_two_name FROM
      (SELECT * FROM item_classify WHERE item_classify_grade=1) a
    INNER JOIN
      (SELECT * FROM item_classify WHERE item_classify_grade=2) b
    ON a.item_classify_name=b.item_previous_classify
   </select>

   <resultMap type="ItemInfo" id="itemInfoRM" autoMapping="true">
		<id property="itemId" column="item_id"/>
		<association property="itemDetail" javaType="ItemDetail">
			<id property="itemId" column="x_id"/>
			<result property="itemPica" column="item_pica"/>
		</association>
	</resultMap>

    <resultMap type="Classify" id="classify" autoMapping="true">
        <id property="oneId" column="one_id"/>
        <collection property="classifyTwoList" ofType="ClassifyTwo" autoMapping="true">
            <id column="two_id" property="twoId"/>
            <result property="classifyTwoName" column="classify_two_name"/>
        </collection>
    </resultMap>

   <select id="getCount" resultType="int" parameterType="Search">
   	SELECT count(0) FROM
    (SELECT * FROM
    (select * from item_info where state=1) a
    INNER JOIN
    (SELECT item_id x_id,item_pica FROM item_detail) b
    ON a.item_id=b.x_id) c
    INNER JOIN
    (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) d
    ON c.item_brand_id=d.p_id
    <where>
    	<if test="oneClassify!=null">one_classify=#{oneClassify}</if>
    	<if test="twoClassify!=null">and two_classify=#{twoClassify}</if>
    	<if test="threeClassify!=null">and three_classify=#{threeClassify}</if>
    	<if test="itemBrandName!=null">and item_brand_name=#{itemBrandName}</if>
    </where>
   </select>

   <select id="queryItemSearch" resultMap="itemInfoRM" parameterType="Search">
   	SELECT * FROM
    (SELECT * FROM
    (select * from item_info where state=1) a
    INNER JOIN
    (SELECT item_id x_id,item_pica FROM item_detail) b
    ON a.item_id=b.x_id) c
    INNER JOIN
    (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) d
    ON c.item_brand_id=d.p_id
    <where>
    	<if test="oneClassify!=null">one_classify=#{oneClassify}</if>
    	<if test="twoClassify!=null">and two_classify=#{twoClassify}</if>
    	<if test="threeClassify!=null">and three_classify=#{threeClassify}</if>
    	<if test="itemBrandName!=null">and item_brand_name=#{itemBrandName}</if>
    </where>
    order by
    <choose>
    	<when test="rule==1">updated desc</when>
    	<when test="rule==2">sales desc</when>
    	<when test="rule==3">item_price desc</when>
    	<when test="rule==4">item_price asc</when>
    </choose>
    LIMIT #{currentNumber},#{numberPerPage}
   </select>

   <select id="getCountGet" resultType="int" parameterType="Search">
   	SELECT count(0) FROM
    (SELECT * FROM
    (select * from item_info where state=1 and is_throw=1) a
    INNER JOIN
    (SELECT item_id x_id,item_pica FROM item_detail) b
    ON a.item_id=b.x_id) c
    INNER JOIN
    (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) d
    ON c.item_brand_id=d.p_id
    <where>
    	<if test="oneClassify!=null">one_classify=#{oneClassify}</if>
    	<if test="twoClassify!=null">and two_classify=#{twoClassify}</if>
    	<if test="threeClassify!=null">and three_classify=#{threeClassify}</if>
    	<if test="itemBrandName!=null">and item_brand_name=#{itemBrandName}</if>
    </where>
   </select>

   <select id="queryItemSearchGet" resultMap="itemInfoRM" parameterType="Search">
   	SELECT * FROM
    (SELECT * FROM
    (select * from item_info where state=1 and is_throw=1) a
    INNER JOIN
    (SELECT item_id x_id,item_pica FROM item_detail) b
    ON a.item_id=b.x_id) c
    INNER JOIN
    (SELECT item_brand_id p_id,item_brand_name FROM item_brand where state=1) d
    ON c.item_brand_id=d.p_id
    <where>
    	<if test="oneClassify!=null">one_classify=#{oneClassify}</if>
    	<if test="twoClassify!=null">and two_classify=#{twoClassify}</if>
    	<if test="threeClassify!=null">and three_classify=#{threeClassify}</if>
    	<if test="itemBrandName!=null">and item_brand_name=#{itemBrandName}</if>
    </where>
    order by
    <choose>
    	<when test="rule==1">updated desc</when>
    	<when test="rule==2">sales desc</when>
    	<when test="rule==3">item_price desc</when>
    	<when test="rule==4">item_price asc</when>
    </choose>
    LIMIT #{currentNumber},#{numberPerPage}
   </select>

   <select id="getAllRecommendItemList" resultMap="itemInfoRM">
   		SELECT e.* FROM
(SELECT * FROM
    (SELECT * FROM
    item_info  a
    INNER JOIN 
    (SELECT item_id x_id,item_pica FROM item_detail) b
    ON a.item_id=b.x_id) c
    INNER JOIN 
    (SELECT item_brand_id p_id,item_brand_name FROM item_brand WHERE state=1) d
    ON c.item_brand_id=d.p_id) e
    INNER JOIN
    recommend_item f
    ON e.item_id=f.item_id
    limit 0,10
   </select>
</mapper>