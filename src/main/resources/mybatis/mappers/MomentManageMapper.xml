<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yayiabc.http.mvc.dao.MomentManageDao">
	<insert id="addLower" parameterType="Moment" useGeneratedKeys="true" keyProperty="momentId">
		insert into moment(user_id,moment_content,moment_picture,moment_type)
		VALUE (#{userId},#{momentContent},#{momentPicture},#{momentType})
	</insert>

	<insert id="addHigh" parameterType="Moment" useGeneratedKeys="true" keyProperty="momentId">
		insert into moment(user_id,moment_content_id,moment_type,moment_content)
		VALUE (#{userId},#{momentContentId},#{momentType},#{momentContent})
	</insert>

	<delete id="deleteMoment">
		delete from moment where moment_id=#{momentId}
	</delete>





	<select id="getMomentTotalNumber" resultType="int">
		select count(*) from moment
		<where>
			<if test="type==2">
				user_id=#{userId}
			</if>
		</where>
	</select>

	<resultMap id="moment" type="Moment" autoMapping="true">
		<id property="momentId" column="moment_id"/>
		<result property="userId" column="user_id"/>
		<result property="userName" column="true_name"/>
		<result property="userPic" column="user_pic"/>
	</resultMap>


	<select id="queryList" resultMap="moment">
		select a.moment_id,b.user_id,b.true_name,b.user_pic,a.moment_content,a.moment_picture,a.moment_content_id,a.moment_type,a.moment_time FROM
		(select * from moment
			<where>
			<if test="type==2">
				user_id=#{userId}
			</if>
		</where>) a
		LEFT join user b on a.user_id=b.user_id
		order by a.moment_time DESC
		limit #{page.currentNumber},#{page.numberPerPage}
	</select>

	<select id="getMomentTitleByVedio" resultType="java.util.Map">
		select video_name as contentTitle,vedio_pic AS contentPic from vid_manage where vi_id=#{momentContentId}
	</select>
	
	<select id="getMomentTitleByPost" resultType="java.util.Map">
		select headline as contentTitle,cover as contentPic from cottoms_post where post_id=#{momentContentId}
	</select>
	
	<select id="getMomentTitleByTrain" resultType="java.util.Map">
		select train_name as contentTitle,train_pic AS contentPic from train where train_id=#{momentContentId}
	</select>

	<select id="getUserIdByMomentId" resultType="string">
		select user_id from moment where moment_id=#{beCommentedId}
	</select>

	<select id="getMomentByMomentId" resultType="Moment">
		select	a.*,b.true_name,b.user_pic FROM
		(select * from moment where moment_id=#{momentId}) a
		JOIN `user` b on a.user_id=b.user_id
	</select>

	<select id="getUserByMomentId" resultType="User">
		SELECT b.user_id,b.true_name
		FROM moment a
		LEFT JOIN `user` b ON a.user_id=b.user_id
		WHERE a.moment_id=#{beCommentedId}
	</select>

	<select id="getUserBySubMomentId" resultType="User">
		SELECT b.user_id,b.true_name
		FROM dentist_comment a
		LEFT JOIN `user` b ON a.user_id=b.user_id
		WHERE a.id=#{parentId}
	</select>

	<insert id="addComment">
		insert into dentist_comment(user_id,content,moment_id,reply_id)
		VALUES (#{userId},#{coment.commentContent},#{beCommentedId},#{parentId})
	</insert>

	<select id="getMomentCommentList" resultType="SubComment">
		SELECT h.id AS comment_id,h.content AS comment_content,h.created AS comment_time,
		h.user_id,h.true_name AS user_name,h.user_pic,g.user_id AS reply_user_id,g.true_name AS reply_user_name
		(SELECT e.id,e.content,e.created,f.user_id,f.true_name,f.user_pic
		FROM dentist_comment e
		LEFT JOIN `user` f ON e.user_id=f.user_id
		WHERE e.moment_id=#{momentId}
		)h
		LEFT JOIN
		(SELECT c.a_id,d.user_id,d.true_name,d.user_pic
		(SELECT a.user_id AS a_id,b.user_id
		FROM dentist_comment a
		LEFT JOIN dentist_comment b ON a.reply_id=b.id) c
		LEFT JOIN `user` d ON c.user_id=d.user_id) g
		ON h.id=g.a_id
	</select>

	<select id="getMomentTitleByFaq" resultType="java.util.Map">
		select faq_question_title from faq_question where faq_question_id=#{momentContentId}
	</select>












</mapper>       